<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc maxdepth="4"?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>jjs-examples (0.0.1)</title>
<date>2018-07-31 19:51:58 UTC</date>
<author>
<personname>
<firstname>Maksim</firstname>
<surname>Kostromin</surname>
</personname>
<email>daggerok@gmail.com</email>
</author>
<authorinitials>MK</authorinitials>
<revhistory>
<revision>
<revnumber>0.0.1</revnumber>
<date>2018-07-31 19:51:58 UTC</date>
<authorinitials>MK</authorinitials>
</revision>
</revhistory>
</info>
<preface>
<title></title>
<simpara>Travis CI status:
<inlinemediaobject>
<imageobject>
<imagedata fileref="https://travis-ci.org/daggerok/jjs-examples.svg?branch=master"/>
</imageobject>
<textobject><phrase>Build Status</phrase></textobject>
</inlinemediaobject></simpara>
</preface>
<chapter xml:id="introduction">
<title>Introduction</title>
<simpara>Read <link xl:href="https://daggerok.github.io/jjs-examples">project reference documentation</link></simpara>
<formalpara>
<title>build</title>
<para>
<programlisting language="bash" linenumbering="unnumbered">./mvnw -Pdocs</programlisting>
</para>
</formalpara>
<simpara>Initially generated by using <link xl:href="https://github.com/daggerok/generator-jvm/">generator-jvm</link> yeoman generator (java-parent-multi-project)</simpara>
</chapter>
<chapter xml:id="implementation">
<title>Implementation</title>
<section xml:id="hello-nashorn">
<title>hello-nashorn</title>
<formalpara>
<title>using Runnable interface (js code must have run function</title>
<para>
<programlisting language="kotlin" linenumbering="unnumbered">package daggerok.runnableapp

import javax.script.Invocable
import javax.script.ScriptEngineManager

fun main(args: Array&lt;String&gt;) {
    val engine = ScriptEngineManager().getEngineByName("nashorn")
    engine.eval("""
    function greet(name) {
      return "Hello, " + name + "!";
    }
    var greeting = "Ololo-Trololo";
    function run() {
      print("greet('" + greeting + "') = '" + greet(greeting) + "'");
    }
  """)
    val invocable = engine as Invocable
    val runnable = invocable.getInterface(Runnable::class.java)
    runnable.run()
}</programlisting>
</para>
</formalpara>
<formalpara>
<title>create simple java.js app</title>
<para>
<programlisting language="kotlin" linenumbering="unnumbered">package daggerok.hellonashornapp

import javax.script.Invocable
import javax.script.ScriptEngineManager

fun main(args: Array&lt;String&gt;) {
    val engine = ScriptEngineManager().getEngineByName("nashorn")
    engine.eval("""
    function greet(name) {
      return "Hello, " + name + "!";
    }
  """)
    val invocable = engine as Invocable
    println(invocable.invokeFunction("greet", "World"))
    println(invocable.invokeFunction("greet", "Maksimko"))
}</programlisting>
</para>
</formalpara>
<simpara>Initially generated by using <link xl:href="https://github.com/daggerok/generator-jvm/">generator-jvm</link> yeoman generator (kotlin)</simpara>
</section>
</chapter>
<chapter xml:id="links">
<title>Links</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://github.com/daggerok/jjs-examples">GitHub repo</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://daggerok.github.io/jjs-examples">GitHub pages</link></simpara>
</listitem>
</itemizedlist>
</chapter>
</book>